"""Migration description

Revision ID: e8da535619c2
Revises: 
Create Date: 2025-03-18 12:46:39.418624

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8da535619c2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('domande',
    sa.Column('id_domanda', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('corpo', sa.String(length=500), nullable=False),
    sa.Column('data_ora_inserimento', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('numero_pagina', sa.Integer(), nullable=True),
    sa.Column('attivo', sa.Boolean(), nullable=False),
    sa.Column('risposta_esatta', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id_domanda')
    )
    op.create_index(op.f('ix_domande_id_domanda'), 'domande', ['id_domanda'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('statistiche',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_domanda', sa.String(length=50), nullable=False),
    sa.Column('nr_errori', sa.Integer(), nullable=False),
    sa.Column('utente_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['utente_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_statistiche_id'), 'statistiche', ['id'], unique=False)
    op.create_table('tests',
    sa.Column('id_test', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('data_ora_inizio', sa.DateTime(), nullable=True),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('in_sequenza', sa.Boolean(), nullable=True),
    sa.Column('nr_gruppo', sa.Integer(), nullable=False),
    sa.Column('secondi_ritardo', sa.Integer(), nullable=False),
    sa.Column('utente_id', sa.Integer(), nullable=False),
    sa.Column('data_ora_fine', sa.DateTime(), nullable=True),
    sa.Column('data_ora_inserimento', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('nr_test', sa.Integer(), nullable=False),
    sa.Column('tempo_impiegato', sa.Float(), nullable=True),
    sa.Column('malus_f5', sa.Boolean(), nullable=False),
    sa.Column('numero_errori', sa.Integer(), nullable=False),
    sa.Column('is_validate', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['utente_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id_test')
    )
    op.create_index(op.f('ix_tests_id_test'), 'tests', ['id_test'], unique=False)
    op.create_table('testsgroup',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nr_test', sa.Integer(), nullable=False),
    sa.Column('nr_gruppo', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('in_sequenza', sa.Boolean(), nullable=False),
    sa.Column('secondi_ritardo', sa.Integer(), nullable=False),
    sa.Column('data_ora_inizio', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_ora_inserimento', sa.DateTime(timezone=True), nullable=False),
    sa.Column('utente_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['utente_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testsgroup_id'), 'testsgroup', ['id'], unique=False)
    op.create_table('varianti',
    sa.Column('id_variante', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('corpo', sa.JSON(), nullable=False),
    sa.Column('data_ora_inserimento', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=True),
    sa.Column('numero_pagina', sa.Integer(), nullable=True),
    sa.Column('attivo', sa.Boolean(), nullable=True),
    sa.Column('domanda_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['domanda_id'], ['domande.id_domanda'], ),
    sa.PrimaryKeyConstraint('id_variante')
    )
    op.create_index(op.f('ix_varianti_id_variante'), 'varianti', ['id_variante'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_varianti_id_variante'), table_name='varianti')
    op.drop_table('varianti')
    op.drop_index(op.f('ix_testsgroup_id'), table_name='testsgroup')
    op.drop_table('testsgroup')
    op.drop_index(op.f('ix_tests_id_test'), table_name='tests')
    op.drop_table('tests')
    op.drop_index(op.f('ix_statistiche_id'), table_name='statistiche')
    op.drop_table('statistiche')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_domande_id_domanda'), table_name='domande')
    op.drop_table('domande')
    # ### end Alembic commands ###
